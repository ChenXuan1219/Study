面对对象

scala中没有public,一个.scala中可以写多个类

scala的public属性,底层实际为private
并通过get和set方法,对其操作.
如果使用到get和set方法,scala提供了@BeanProperty注解,设置了get和set

方法和属性默认权限是public,没有public关键字

private
私有权限,只在类的内部和伴生对象中可用


protected
同类,子类可以访问,同包不能访问

private
增加包访问权限,包名下的其他类也可以使用


构造器
主构造器
辅助构造器

构造器参数

主构造器的形参包括三种类型:
1.未用任何修饰符:这个参数是一个局部变量
2.var修饰:作为类的成员属性使用,可以修改
3.val修饰:作为只读属性,不能修改

继承和多态
单继承

动态绑定
子类继承父类,


抽象类
1.定义抽象类 abstract class Person{}
2.定义抽象属性 var|val name:String 一个属性没有初始化,就是抽象属性
3.定义抽象方法 def hell():String 只声明而没有实现的方法,就是抽象方法

注意:
1.重写抽象方法不用加override
2.子类对抽象属性实现,父类可以用var修饰
  子类对非抽象属性重写,父类只支持val
  因为var修饰的为可变变量,子类继承后可以直接使用,没必要重写


单例对象
1.单例对象采用object
2.单例对象对应类 : 伴生类
3.单例对象的属性和方法可以通过伴生类名直接调用


Trait

extends Trait1 with Trait2 with3


类型的检查和转换
obj.isInstanceOf[T]:判断obj是不是T类型
obj.asInstanceOf[T]:将obj强转成T类型
classOf获取对象的类名

